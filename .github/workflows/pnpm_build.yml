name: PNPM Build

on:
  workflow_call:
    inputs:
      working_dir:
        description: "The directory containing the package.json file."
        required: false
        type: string
        default: "."
      command:
        description: "The pnpm command to run in package.json."
        required: true
        type: string
      output_path:
        description: "The output path is uploaded to a key named `artifact`."
        required: false
        type: string
      github_pages:
        description: "Upload in format specific for Github Pages `actions/deploy-pages`."
        type: boolean
        default: false
    outputs:
      artifact_name:
        description: "The artifact name (default: `artifact`)."
        value: "build"

jobs:
  build:
    name: PNPM Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
          cache-dependency-path: "${{inputs.working_dir}}/pnpm-lock.yaml"

      - name: Install dependencies
        working-directory: ${{inputs.working_dir}}
        run: pnpm install

      - name: Build
        working-directory: ${{inputs.working_dir}}
        run: pnpm run ${{ inputs.command }}

      # TODO check if this is required since upload-artifact v4
      # - name: Zip Artifact Dir
      #   if: ${{ inputs.output_path }}
      #   run: |
      #     tar -cvzf ${{ inputs.output_key }}.tar.gz ${{ inputs.output_path }}

      - name: Upload Artifact Dir
        if: ${{ inputs.output_path && !inputs.github_pages }}
        uses: actions/upload-artifact@v4
        with:
          path: ${{ inputs.output_path }}
          name: build

      - name: Upload GH Pages Artifact
        if: ${{ inputs.output_path && inputs.github_pages }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ inputs.output_path }}

  deploy:
    needs: build
    if: ${{ inputs.output_path && inputs.github_pages }}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment origin
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
