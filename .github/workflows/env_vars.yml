name: Get Env Vars

on:
  workflow_call:
    inputs:
      environment:
        description: "The Github environment to retreive the env and secret var for."
        required: true
        type: string
    outputs:
      all_vars:
        description: "All parsed variables and secrets."
        value: ${{ jobs.get_env_vars.outputs.all_vars }}

jobs:
  get_env_vars:
    runs-on: ubuntu-latest

    outputs:
      all_vars: ${{ steps.vars_and_secrets.outputs.all_vars }}

    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: vars_and_secrets
        name: Vars and Secrets to Env
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          parsed_vars=$(jq -n --argjson VARS_CONTEXT "$VARS_CONTEXT" --argjson SECRETS_CONTEXT "$SECRETS_CONTEXT" '$VARS_CONTEXT + $SECRETS_CONTEXT')
          echo "Concat vars+secrets: ${parsed_vars}"

          # Random delimeter string for security
          delim=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)

          # Func to parse JSON with multiline strings, using delimeter (Github specific)
          to_envs() { jq -r "to_entries[] | \"\(.key)=\(.value)\n\""; }

          all_kv_pairs=$(echo "$parsed_vars" | to_envs)
          echo "key=value pairs: ${all_kv_pairs}"

          # Export wrapped multiline to GITHUB_OUTPUT
          echo "all_vars<<EOF" >> $GITHUB_OUTPUT
          echo $all_kv_pairs >> $GITHUB_OUTPUT 
          echo "EOF" >> $GITHUB_OUTPUT

          echo "Final GITHUB_ENV:"
          cat $GITHUB_OUTPUT

          ## Comma separated output
          # parsed_vars=$(jq -n --argjson VARS_CONTEXT "$VARS_CONTEXT" --argjson SECRETS_CONTEXT "$SECRETS_CONTEXT" '$VARS_CONTEXT + $SECRETS_CONTEXT')
          # echo "Concat vars+secrets: ${parsed_vars}"

          # # Parse all json as key=value pairs, single line, space separated
          # to_comma_separated_kvs() { jq -r 'to_entries | map("\(.key)=\(.value)") | join(",")'; }

          # all_kv_pairs=$(echo "$parsed_vars" | to_comma_separated_kvs)
          # echo "key=value pairs: ${all_kv_pairs}"

          # # Export as single line var
          # echo "all_vars=${all_kv_pairs}" >> $GITHUB_OUTPUT

          # echo "Final GITHUB_OUTPUT:"
          # cat $GITHUB_OUTPUT
